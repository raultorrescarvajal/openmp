---
layout: post
title:  "Regiones paralelas y sincronización"
categories: taller devices
---
[Anterior](036-host-device-000.html) | [Siguiente](038-device-000.html)

## Control de la ejecución 
### Directiva **target**: `#pragma omp target` 
...

#### Sintaxis básica
```c
#pragma omp parallel 
{
    <parallel region code>
    
    #pragma omp single 
    {
        <serial region code>

        #pragma omp target
        {
            <target region code>
        }

        <serial region code>
    } 
    
    <parallel region code>
}
``` 
#### Ejemplo
...
```c
#include <stdio.h>
#include <omp.h>

int main(){
    int m = omp_get_thread_num();
    printf("master thread=%d in serial region\n", m);
    
    #pragma omp parallel
    {
        int t = omp_get_thread_num();
        printf("thread=%d in parallel region\n", t);
        
        #pragma omp single
        {
            int s = omp_get_thread_num();
            printf("thread=%d in single region\n", s);
        } // implict barrier here

        printf("thread=%d says goodbye\n", t);
    }
    
    printf("master thread=%d in serial region\n", m);
}
```
[Descarga el código aquí](../../../../../codigo/target-000.c).

##### ¿Cómo compilar?
```bash
clang -fopenmp -I/home/user/llvm/llvm-build/projects/openmp/runtime/src/ 
     -o target-000 target-000.c
```
##### ¿Cómo ejecutar?
```bash
./target-000 
```
##### Salida
```bash
```
...

[Anterior](036-host-device-000.html) | [Siguiente](038-device-000.html)